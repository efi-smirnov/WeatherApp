name: Python CI and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest  # Use the latest Ubuntu image

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  # Specify the Python version you are using

      - name: Install Poetry
        run: |
          pip install poetry

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-ansi

      - name: Run flake8
        run: |
          poetry run flake8 weather_app/weather.py  # Updated to reflect the new path

      - name: Run pytest
        run: |
          poetry run pytest tests/  # Run pytest through poetry

  deployment:
    runs-on: ubuntu-latest
    needs: lint-and-test  # Ensures deployment runs only if lint-and-test succeeds
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare Environment
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip
          sudo pip3 install awsebcli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag Docker image
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: streamlit-demo:latest

      - name: Deploy to Elastic Beanstalk environment
        id: create-environment
        run: |
          eb init efi-smirnov-streamlit-demo-env --platform Docker --region eu-west-2 --verbose
          eb list
          eb deploy Efismirnovstreamlitdemoenv-env
